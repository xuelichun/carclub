package com.zeepn.controller;
import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.ibatis.annotations.Select;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.zeepn.bean.Club;
import com.zeepn.bean.UserInfo;
import com.zeepn.bean.Visitor;
import com.zeepn.service.PreInfoService;
import com.zeepn.service.UserService;
import com.zeepn.utils.DateFormat;
import com.zeepn.utils.TransCoding;
import com.zeepn.utils.Upload;
@Controller
@RequestMapping("/user")
public class UserController {
	@Autowired
	UserService userService;
	@Autowired
	PreInfoService preInfoService;
	/**
	 * 用户电话号和密码登录
	 * @param u_phone  电话号
	 * @param u_pwd 密码
	 * @param request 
	 * @return  
	 */
	@RequestMapping("/loginbyphone")
	@ResponseBody
	public UserInfo loginByPhone(String u_phone,String u_pwd,HttpServletRequest request){
		HttpSession session=request.getSession();
		UserInfo user =userService.userLoginByPhone(u_phone,u_pwd);
		if(user!=null){
			session.setAttribute("user", user);
		}
		return user;
	}
	
	/**  用户邮箱和密码登录
	 * 
	 * @param u_email 邮箱
	 * @param u_pwd 密码
	 * @param request
	 * @return
	 */
	@RequestMapping("/loginbyemail")
	@ResponseBody
	public UserInfo loginByEmail(String u_email,String u_pwd,HttpServletRequest request){
		HttpSession session=request.getSession();
		UserInfo user=userService.userLoginByEmail(u_email, u_pwd);
		if(user!=null){
			session.setAttribute("user", user);	
		}
		return user;
	}
	/**
	 * 用户注册
	 * @param head  头像
	 * @param request
	 * @param userinfo 用户的其他信息
	 * @return
	 * @throws IOException
	 */
	@RequestMapping(value="/reg",method=RequestMethod.POST)
	@ResponseBody
	public Object  userReg(@RequestParam MultipartFile[] head,HttpServletRequest request,UserInfo userinfo) throws IOException{
		String u_head="";
		for(MultipartFile file:head){
			u_head=Upload.uploadPicture(file, request,"head");
			}
			if(u_head!=null){
				userinfo.setU_head(u_head);
				if(userService.userReg(userinfo)>0){
					return "{\"rs\":\"ok\"}";
				}else{
					Upload.deletePicture(u_head);
					return "{\"rs\":\"no\"}";
				}
			}else{
				return "{\"rs\":\"no\"}";
			}
	}
	/**
	 * 计算邮箱是否已被使用
	 * @param u_email
	 * @return
	 */
	@RequestMapping("/countEmail")
	@ResponseBody
	public Object countEmail(String u_email){
		int countEmail=userService.countEmail(u_email);
		if(countEmail>0){
			return "{\"rs\":\"no\"}";
		}else{
			return "{\"rs\":\"ok\"}";
		}
	}
	
	/**
	 * 修改资料时用到的邮箱验证
	 * @param u_email
	 * @param request
	 * @return
	 */
	@RequestMapping("/cEmail")
	@ResponseBody
	public Object cEmail(String u_email,HttpServletRequest request){
		HttpSession session =request.getSession();
		UserInfo userinfo=(UserInfo) session.getAttribute("user");
		if(u_email.equals(userinfo.getU_email())){
			return "{\"rs\":\"ok\"}";
		}else{
			int countEmail=userService.countEmail(u_email);
			if(countEmail>0){
				return "{\"rs\":\"no\"}";
			}else{
				return "{\"rs\":\"ok\"}";
			}
		}
	}
	/**
	 * 计算电话号码是否已被使用
	 * @param u_phone
	 * @return
	 */
	@RequestMapping("/countPhone")
	@ResponseBody
	public Object countPhone(String u_phone){
		int countPhone=userService.countPhone(u_phone);
		if(countPhone>0){
			return "{\"rs\":\"no\"}";
		}else{
			return "{\"rs\":\"ok\"}";
		}
	}
	/**
	 * 判断是否登录
	 * @param request
	 * @return
	 */
	@RequestMapping("/islogin")
	@ResponseBody
	public UserInfo isLogin(HttpServletRequest request){
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo) session.getAttribute("user");
		return user;
	}
	
	/**
	 * 退出登录
	 * @param request
	 * @return
	 */
	@RequestMapping("/exit")
	@ResponseBody
	public Object exit(HttpServletRequest request){
		HttpSession session=request.getSession();
		session.removeAttribute("user");
		return "{\"rs\":\"ok\"}";
	}
	@RequestMapping("/isPresident")
	@ResponseBody
	public Object isPresident(int u_id){
		int a=preInfoService.isPresident(u_id);
		//System.out.println(a);
		return "{\"rs\":\""+a+"\"}";
	}
	@RequestMapping(value="/change",method=RequestMethod.POST)
	@ResponseBody
	public Object change(@RequestParam MultipartFile[] head,HttpServletRequest request,UserInfo userinfo) throws IOException{
		HttpSession session=request.getSession();
		UserInfo user=(UserInfo) session.getAttribute("user");
		if(head[0].isEmpty()){
			System.out.println(1);
			userinfo.setU_head(user.getU_head());
		}else{
			String u_head=Upload.uploadPicture(head[0], request, "head");
			Upload.deletePicture(user.getU_head());
			//System.out.println(u_head);
			userinfo.setU_head(u_head);
			//System.out.println(userinfo);
		}
		if(userService.perfectUser(userinfo)>0){
			UserInfo us=userService.selectUserById(userinfo.getU_id());
			session.setAttribute("user", us);
			return "{\"rs\":\"ok\"}";
		}else{
			return "{\"rs\":\"no\"}";
		}	
	}
	
	/**
	 * 查询用户头像，昵称，
	 * @param u_id 用户id
	 * @return 
	 */
	@RequestMapping("/selectHeadAndNick")
	@ResponseBody
	public UserInfo selectHeadAndNick(int u_id){
		UserInfo user=userService.selectHeadAndNick(u_id);
		System.out.println(user);
		return user;
	}
	
	@RequestMapping("/changePwd")
	@ResponseBody
	public Object changePwd(int u_id ,String u_pwd,HttpServletRequest request){
		UserInfo user=new UserInfo(u_id, u_pwd);
		HttpSession session=request.getSession();
		if(userService.updateUserPwd(user)>0){
			session.removeAttribute("user");
			return "{\"rs\":\"ok\"}";
		}else{
			return "{\"rs\":\"no\"}";
		}
	}
	
	@RequestMapping("/updateTotal")
	@ResponseBody
	public Object updateTotal(int u_id) {
		if(userService.updateTotal(u_id)>0){
			return "{\"rs\":\"ok\"}";
		}else{
			return "{\"rs\":\"no\"}";
		}
	}

	@RequestMapping("/insertVisitor")
	@ResponseBody
	public Object insertVisitor(int v_uid1,int v_uid2,String u_nick){
		String v_time=DateFormat.getCurrentTime(DateFormat.DEFAULT_DATE_FORMATS);
		u_nick=TransCoding.transCoding(u_nick);
		Visitor visitor =new Visitor(v_uid1, u_nick, v_uid2, v_time);
		if(userService.insertVisitor(visitor)>0){
			return "{\"rs\":\"ok\"}";	
		}else{
			return "{\"rs\":\"no\"}";
		}
	}
	
	
	/**
	 * 根据车友会id。查询一个车友会对象
	 * @return
	 */
	@RequestMapping("/selectClubById")
	@ResponseBody
	public Club selectClubById(int club_id){
		return userService.selectClubByUser(club_id);	
	}
}
