package com.zeepn.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.zeepn.bean.ActReg;
import com.zeepn.bean.Activity;
import com.zeepn.bean.ClubFee;
import com.zeepn.bean.EcashRecord;
import com.zeepn.bean.JoinAppli;
import com.zeepn.bean.MemFee;
import com.zeepn.bean.OpRecord;
import com.zeepn.bean.PayCon;
import com.zeepn.bean.PreInfo;
import com.zeepn.service.ActivityService;
import com.zeepn.service.ClubFeeService;
import com.zeepn.service.EcashRecordService;
import com.zeepn.service.JoinAppliService;
import com.zeepn.service.MemFeeService;
import com.zeepn.service.OpRecordService;
import com.zeepn.service.PreInfoService;
import com.zeepn.utils.TransCoding;
import com.zeepn.utils.Upload;

@Controller
public class ClubAdminController {
	@Autowired
	JoinAppliService joinAppliService;
	@Autowired
	PreInfoService preInfoService;
	@Autowired
	ClubFeeService clubFeeService;
	@Autowired
	ActivityService activityService;
	@Autowired
	EcashRecordService ecashRecordService;
	@Autowired
	OpRecordService opRecordService;
	@Autowired
	MemFeeService memFeeService;
	
	@RequestMapping("/clubAdmina")
	@ResponseBody
	public int insertJoinAppli(JoinAppli joinAppli){
		int row=joinAppliService.insertJoinAppli(joinAppli);
		return row;
	}
	
	@RequestMapping("/clubAdminb")
	@ResponseBody
	public List<JoinAppli> selectJoinAppli(int club_id){
		List<JoinAppli> joinAppli=joinAppliService.selectJoinAppli(club_id);
		return joinAppli;
	}
	
	@RequestMapping("/clubAdminc")
	@ResponseBody
	public int updateJoinAppli(int ja_id,String ja_status){
		ja_status=TransCoding.transCoding(ja_status);
		int row=joinAppliService.updateJoinAppli(ja_id, ja_status);
		return row;
	}
	
	@RequestMapping("/clubAdmind")
	@ResponseBody
	public PreInfo selectPreInfo(int p_id){
		PreInfo preInfo=preInfoService.selectPreInfo(p_id);
		return preInfo;
	}
	
	@RequestMapping("/clubAdmine")
	@ResponseBody
	public int updatePreInfoAdd(int p_id,int vp_id){
		int row=preInfoService.updatePreInfoAdd(p_id, vp_id);
		return row;
	}
	
	@RequestMapping("/clubAdminf")
	@ResponseBody
	public int updatePreInfoDelete(int p_id,int vp_id){
		int row=preInfoService.updatePreInfoDelete(p_id, vp_id);
		return row;
	}
	
	@RequestMapping("/clubAdming")
	@ResponseBody
	public int updateClubFee(int club_id,int cf_money,int cf_grade){
		int row=clubFeeService.updateClubFee(club_id, cf_money, cf_grade);
		return row;
	}
	
	@RequestMapping("/clubAdminh")
	@ResponseBody
	public ClubFee selectClubFee(int club_id){
		ClubFee clubFee=clubFeeService.selectClubFee(club_id);
		return clubFee;
	}
	
	@RequestMapping("/clubAdmini")
	@ResponseBody
	public int insertPayCon(PayCon payCon){
		int row=clubFeeService.insertPayCon(payCon);
		return row;
	}
	
	@RequestMapping(value="/clubAdminj",method=RequestMethod.POST)
	@ResponseBody
	public int insertActivity(MultipartFile act_img,HttpServletRequest request) throws IOException{
		System.out.println(1111);
		String act_name=request.getParameter("act_name");
		String act_content=request.getParameter("act_content");
		String act_pro=request.getParameter("act_pro");
		String act_city=request.getParameter("act_city");
		double act_money=Double.parseDouble(request.getParameter("act_money"));
		double act_dis=Double.parseDouble(request.getParameter("act_dis"));
		String act_applitime=request.getParameter("act_applitime");
		String act_starttime=request.getParameter("act_starttime");
		String act_stoptime=request.getParameter("act_stoptime");
		int club_id=Integer.parseInt(request.getParameter("club_id"));
		String img=Upload.uploadPicture(act_img, request, "act_image");
		Activity activity=new Activity(act_name, act_content, img, act_pro,act_city, act_money, act_dis, act_applitime, act_starttime,act_stoptime, club_id,0);
		System.out.println(activity);
		int row=activityService.insertActivity(activity);
		return row;
	}
	
	@RequestMapping("/clubAdmink")
	@ResponseBody
	public List<Activity> selectActivities(int club_id){
		List<Activity> activities=activityService.selecActivities(club_id);
		return activities;
	}
	
	@RequestMapping("/clubAdminl")
	@ResponseBody
	public Activity selectActivity(int act_id){
		Activity actitvity=activityService.selectActivity(act_id);
		return actitvity;
	}
	
	@RequestMapping(value="/clubAdminm",method=RequestMethod.POST)
	@ResponseBody
	public int updateActivity(MultipartFile act_img,HttpServletRequest request) throws IOException{
		int act_id=Integer.parseInt(request.getParameter("act_id"));
		String act_name=request.getParameter("act_name");
		String act_content=request.getParameter("act_content");
		String act_pro=request.getParameter("act_pro");
		String act_city=request.getParameter("act_city");
		double act_money=Double.parseDouble(request.getParameter("act_money"));
		double act_dis=Double.parseDouble(request.getParameter("act_dis"));
		String act_applitime=request.getParameter("act_applitime");
		String act_starttime=request.getParameter("act_starttime");
		String act_stoptime=request.getParameter("act_stoptime");
		String img=request.getParameter("act_img");
		if(!act_img.isEmpty()){
			img=Upload.uploadPicture(act_img, request, "act_img");
		}
		Activity activity=new Activity(act_id, act_name, act_content, img, act_pro,act_city, act_money, act_dis, act_applitime, act_starttime,act_stoptime);
		int row=activityService.updateActivity(activity);
		return row;
	}
	
	@RequestMapping("/clubAdminn")
	@ResponseBody
	public int deleteActivity(int act_id){
		int row=activityService.deleteActivity(act_id);
		return row;
	}
	
	@RequestMapping("/clubAdmino")
	@ResponseBody
	public int insertActReg(ActReg actReg){
		int row=activityService.insertActReg(actReg);
		return row;
	}
	
	@RequestMapping("/clubAdminp")
	@ResponseBody
	public int updateActRegOnPay(ActReg actReg){
		int row=activityService.updateActRegOnPay(actReg);
		return row;
	}
	
	@RequestMapping("/clubAdminq")
	@ResponseBody
	public int updateActRegOnRefund(ActReg actReg){
		int row=activityService.updateActRegOnRefund(actReg);
		return row;
	}
	
	@RequestMapping("/clubAdminr")
	@ResponseBody
	public int insertEcashRecord(EcashRecord ecashRecord){
		int row=ecashRecordService.insertEcashRecord(ecashRecord);
		return row;
	}
	
	@RequestMapping("/clubAdmins")
	@ResponseBody
	public List<OpRecord> selectOpRecords(int club_id){
		List<OpRecord> opRecords=opRecordService.selectOpRecords(club_id);
		return opRecords;
	}
	
	@RequestMapping("/clubAdmint")
	@ResponseBody
	public int updateMemFee(MemFee memFee){
		int row=memFeeService.insertMemFee(memFee);
		return row;
	}
	
	@RequestMapping("/clubAdminu")
	@ResponseBody
	public MemFee selectMemFee(int club_id){
		MemFee memFee=memFeeService.selectMemFee(club_id);
		return memFee;
	}
	
	@RequestMapping("/clubAdminv")
	@ResponseBody
	public String[] selectClubAdress(int club_id){
		String []club_address=joinAppliService.selectClubAddress(club_id);
		return club_address;
	}
	

}
