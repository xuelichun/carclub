<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeepn.dao.UserDao">

<insert id="userReg">
	insert into userinfo (u_id,u_head,u_sex,u_pro,u_city,u_level,u_nick,u_pwd,u_email,u_phone,u_grade,u_exp,u_money,u_con,u_del,u_total) values 
	(userinfo_seq.nextval,#{u_head},#{u_sex},#{u_pro},#{u_city},1,#{u_nick},#{u_pwd},#{u_email},#{u_phone},0,0,0,0,0,0)
</insert>
<update id="perfectUser">
	update userinfo set u_name=#{u_name},u_sex=#{u_sex},u_head=#{u_head},u_pro=#{u_pro},u_city=#{u_city},u_nick=#{u_nick},
	u_sign=#{u_sign},u_addr=#{u_addr},u_qq=#{u_qq},u_email=#{u_email},cd_id=#{cd_id},u_zip=#{u_zip},
	u_idcard=#{u_idcard},u_alipy=#{u_alipy} where u_id=#{u_id}
	
</update>
<update id="createCarClub">
	update userinfo set u_name=#{u_name},u_addr=#{u_addr},u_idcard=#{u_idcard} where u_id=#{u_id}
</update>	
<update id="updateUserPwd">
	update userinfo set u_pwd=#{u_pwd} where u_id=#{u_id}
</update>

<update id="updateUserPwdByPhone">
	update userinfo set u_pwd=#{u_pwd} where u_phone=#{u_phone}
</update>
<select id="countPhone" resultType="java.lang.Integer">
	select count(u_id) from userinfo where u_phone=#{u_phone}
</select>
<select id="countEmail" resultType="java.lang.Integer">
	select count(u_id) from userinfo where u_email=#{u_email} 
</select>
<select id="countId" resultType="java.lang.Integer">
	select count(cl_id) from click_like where u_id=#{u_id} and pd_id=#{pd_id}
</select>
<insert id="insertCLickLike">
	insert into click_like values(click_like_seq.nextval,#{u_id},#{u_nick},#{pd_id})
</insert>
<delete id="deleteCLickLike">
	delete from click_like where u_id=#{u_id} and pd_id=#{pd_id}
</delete>
<insert id="insertCar">
	insert into car values(car_seq.nextval,#{u_id},#{c_pic},#{c_brand},#{c_model})
</insert>
<update id="updateCar">
	update car set c_pic=#{c_pic},c_brand=#{c_brand},c_model=#{c_model} where c_id=#{c_id}
</update>
<insert id="insertAccountLog">
	insert into account_log values(account_log_seq.nextval,#{u_id},#{al_trans},#{al_time})
</insert>
<select id="sumValue" resultType="java.lang.Integer">
	select sum(uc_value) from user_chacon where u_id=#{u_id}
</select>
<select id="countuser" resultType="java.lang.Integer">
	select count(u_id) from userinfo
</select>
<select id="selectHeadAndNick" resultType="UserInfo">
	select u_id,u_head,u_nick,u_total from userinfo where u_id=#{u_id}
</select>

<select id="selectUserInfoByClubId" resultType="UserInfo">
	select * from userinfo where club_id=#{club_id}
</select>

<select id="selectUserInfoNotPreByClubId"  resultType="UserInfo">
	 <if test="page==1 and temp==1">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*14) where rn &gt;=1+(#{page}-1)*14 
	</if>
	<if test="page==1 and temp==2">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*13) where rn &gt;=1+(#{page}-1)*13 
	</if>
	<if test="page==1 and temp==3">
		select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*12) where rn &gt;=1+(#{page}-1)*12 
	</if>
	<if test="page>=2">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*15-#{temp}) where rn &gt;=1+(#{page}-1)*15-#{temp}
	</if>
	
</select>

<select id="selectUserInfoNotPreByClubIdForPre"  resultType="UserInfo">
	 <if test="page==1 and temp==1">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*7) where rn &gt;=1+(#{page}-1)*7 
	</if>
	<if test="page==1 and temp==2">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*6) where rn &gt;=1+(#{page}-1)*6 
	</if>
	<if test="page==1 and temp==3">
		select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*5) where rn &gt;=1+(#{page}-1)*5 
	</if>
	<if test="page>=2">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=#{club_id} and u_id not in(select p_id from pre_info 
	where club_id=#{club_id} union select vp1_id from pre_info where club_id=#{club_id} union select vp2_id 
	from pre_info where club_id=#{club_id})) a where rownum &lt;=#{page}*8-#{temp}) where rn &gt;=1+(#{page}-1)*8-#{temp}
	</if>
</select>
<select id="countUserInfoByClubId" resultType="int">
	select count(u_id) from userinfo where club_id=#{club_id}
</select>

<select id="selectUserInfoInClubRankByClubId" resultType="UserInfo">
	 select * from(select * from userinfo where club_id=#{club_id} order by u_grade desc)where rownum&lt;=5
</select>
<insert id="insertVisitor">
	insert into visitor values(visitor_seq.nextval,#{v_uid1},#{u_nick},#{v_uid2},#{v_time})
</insert>
<select id="selectClubMembersOutOfDate" resultType="UserInfo">
	select * from (select a.* , rownum as rn from (select * from userinfo where club_id=1 and u_id not in(select p_id from pre_info 
	where club_id=1 union select vp1_id from pre_info where club_id=1 union select vp2_id 
	from pre_info where club_id=1) and u_id not in (select u_id from pay_con where club_id=1 and pc_mattime&lt;#{time})) a where rownum &lt;=#{page}*8) where rn &gt;=1+(#{page}-1)*8 
</select>

<select id="countCar" resultType="java.lang.Integer">
	select count(c_id) from car where u_id=#{u_id}
</select>
<select id="countClubMembersOutOfDate" resultType="int">
	select count(u_id) from userinfo where club_id=1 and u_id not in(select p_id from pre_info 
	where club_id=1 union select vp1_id from pre_info where club_id=1 union select vp2_id 
	from pre_info where club_id=1) and u_id not in (select u_id from pay_con where club_id=1 and pc_mattime&lt;#{time})
</select>

<update id="deleteMembers">
	update userinfo set club_id=0 where u_id=#{u_id} and club_id=#{club_id}
</update>

<update id="updateUserInfoForJoinAppli">
	update userinfo set u_name=#{u_name},u_sex=#{u_sex},u_pro=#{u_pro},u_city=#{u_city} where u_id=#{u_id}
</update>

<update id="updateUserInfoOnClubId">
	update userinfo set club_id=#{club_id} where u_id=#{u_id}
</update>

<select id="selectFriends" resultMap="user">
select * from(select s.*,rownum as rn from(select * from userinfo where u_id in(select fu_id from friends where u_id=#{u_id})) s) 
	where rn between (#{pageIndex}-1)*8+1 and #{pageIndex}*8
</select>
<select id="checkFriends" resultType="java.lang.Integer">
	select count(f_id) from friends where u_id =#{u_id} and fu_id=#{fu_id}
</select>
<insert id="addFriendMsg">
	insert into add_friends values(add_friends_seq.nextval,#{ad_uid},#{ad_unick},#{ad_uread},#{ad_agree},#{ad_fid},#{ad_fnick},#{ad_fread},#{ad_time})
</insert>
<select id="selectNewAddFriendsMsg" resultMap="addFriends">
select * from(select s.*,rownum as rn from(select * from add_friends where ad_fid=#{ad_fid} and ad_fread=0) s) 
	where rn between (#{pageIndex}-1)*10+1 and #{pageIndex}*10
</select>
<resultMap type="AddFriends" id="addFriends">
<id column="ad_id" property="ad_id"/>
<id column="ad_uid" property="ad_uid"/>
<id column="ad_unick" property="ad_unick"/>
<id column="ad_uread" property="ad_uread"/>
<id column="ad_agree" property="ad_agree"/>
<id column="ad_fid" property="ad_fid"/>
<id column="ad_fnick" property="ad_fnick"/>
<id column="ad_fread" property="ad_fread"/>
<id column="ad_time" property="ad_time"/>
</resultMap>
<select id="selectNewAddFriendsReply" resultMap="addFriends">
select * from(select s.*,rownum as rn from(select * from add_friends where ad_uid=#{ad_uid} and ad_uread=0 and ad_agree!=2) s) 
	where rn between (#{pageIndex}-1)*10+1 and #{pageIndex}*10
</select>

<select id="selectAllAddFriendsMsg" resultMap="addFriends">
select * from(select s.*,rownum as rn from(select * from add_friends where ad_fid=#{ad_fid} ) s) 
	where rn between (#{pageIndex}-1)*10+1 and #{pageIndex}*10
</select>
<select id="selectAllAddFriendsMsgReply" resultMap="addFriends">
select * from(select s.*,rownum as rn from(select * from add_friends where ad_uid=#{ad_uid} and ad_agree!=2) s) 
	where rn between (#{pageIndex}-1)*10+1 and #{pageIndex}*10
</select>
<update id="updateAddFriendsMsg">
	update add_friends set ad_fread=1 where ad_id=#{ad_id}
</update>
<update id="updateAddFriendsReply">
	update add_friends set ad_uread=1 where ad_id=#{ad_id}
</update>
<update id="updateAgree">
	update add_friends set ad_agree=1 where ad_id=#{ad_id}
</update>
<update id="updateNo">
	update add_friends set ad_agree=0 where ad_id=#{ad_id}
</update>
<select id="countNewAddFriendsMsg" resultType="java.lang.Integer">
	select count(ad_id) from add_friends where ad_fid=#{ad_fid} and ad_fread=0
</select>
<select id="countNewAddFriendsReply" resultType="java.lang.Integer">
	select count(ad_id) from add_friends where ad_uid=#{au_fid} and ad_uread=0 and ad_agree!=2
</select>
<select id="countAddFriendsMsg" resultType="java.lang.Integer">
	select count(ad_id) from add_friends where ad_fid=#{ad_fid}  order by ad_time
</select>
<select id="countAddFriendsMsgReply" resultType="java.lang.Integer">
	select count(ad_id) from add_friends where ad_uid=#{ad_uid}  and ad_agree!=2 order by ad_time
</select>
<delete id="deleteAddFriendsMsg">
	delete add_friends where ad_id=#{ad_id}
</delete>
<select id="userRank" resultType="UserInfo">
	select * from (select * from user_info order by u_con desc) where rownum&lt;=7
</select>
<resultMap type="UserInfo" id="user">
	<id column="Id" property="u_id"/>
	<id column="u_name" property="u_name"/>
	<id column="club_id" property="club_id"/>
	<id column="u_head" property="u_head"/>
	<id column="u_sex" property="u_sex"/>
	<id column="u_pro" property="u_pro"/>
	<id column="u_city" property="u_city"/>
	<id column="u_level" property="u_level"/>
	<id column="u_nick" property="u_nick"/>
	<id column="u_pwd" property="u_pwd"/>
	<id column="u_sign" property="u_sign"/>
	<id column="u_addr" property="u_addr"/>
	<id column="u_qq" property="u_qq"/>
	<id column="u_email" property="u_email"/>
	<id column="cd_id" property="cd_id"/>
	<id column="u_phone" property="u_phone"/>
	<id column="u_zip" property="u_zip"/>
	<id column="u_grade" property="u_grade"/>
	<id column="u_idcard" property="u_idcard"/>
	<id column="u_exp" property="u_exp"/>
	<id column="u_del" property="u_del"/>
	<id column="u_money" property="u_money"/>
	<id column="u_alipy" property="u_alipy"/>
	<id column="u_con" property="u_con"/>
	<id column="u_total" property="u_total"/>
</resultMap>
<select id="selectLevels" resultType="Levels">
	select * from levels
</select>
</mapper>