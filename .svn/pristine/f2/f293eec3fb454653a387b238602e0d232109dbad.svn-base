package com.zeepn.dao;
import java.util.List;

import org.apache.ibatis.annotations.Select;
import org.springframework.stereotype.Repository;

import com.zeepn.bean.AppliNotice;

@Repository("appliNoticeDao")
public interface AppliNoticeDao {
	/**
	 * 查询所有的申请通知记录
	 * @param page 行数对象
	 * @return 申请通知集合
	 */
	@Select("select * from(select s.*,rownum as rn from(select * from appli_notice order by an_time desc) s)"
	+"where rn between (#{pageIndex}-1)*10+1 and #{pageIndex}*10")
	public List<AppliNotice> selectAllAppliNotice(int pageIndex);
	/**
	 * 更新申请通知记录
	 * @param appliNotice 申请通知对象
	 * @return 影响申请通知表的行数
	 */
	public int updateAppliNotice(AppliNotice appliNotice);
	/**
	 * 查询车友会申请通知对象方法
	 * @param an_id 申请通知编号
	 * @return 申请通知对象
	 */
	public AppliNotice selectOneAppliNotice(int an_id);
	/**
	 * 提交车友会申请通知方法
	 * @param appliNotice 申请通知对象
	 * @return 申请通过，返回申请通知对象；没有通过，返回空对象
	 */
	public int insertAppliNotice(AppliNotice appliNotice);
	/**
	 * 查询车友会申请通知表的记录条数
	 * @return 记录条数
	 */
	@Select("select count(an_id) from appli_notice")
	public int selectAnCount();
	/**
	 * 查询未读取的申请通知
	 * @param page 行数对象
	 * @return 未读取的申请通知集合
	 */
	public List<AppliNotice> selectAppliNoticeBeforeRead(int read_sign,int pageIndex);
	/**
	 * 查询未读取的申请通知记录数
	 * @return 申请通知记录数
	 */
	public int selectAnCountBeforeRead(int read_sign);
	/**
	 * 查询已读取的申请通知记录数
	 * @param page 行数对象
	 * @return 申请通知记录数
	 */
	public List<AppliNotice> selectAppliNoticeAfterRead(int read_sign,int pageIndex);
	/**
	 * 查询已读取的申请通知记录数
	 * @return 申请通知记录数
	 */
	public int selectAnCountAfterRead(int read_sign);
}
