package com.zeepn.dao;
import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.springframework.stereotype.Repository;
@Repository("supAdmDao")
public interface SupAdmDao {
	/**
	 * 查询超级管理员表中是否存在该管理员的方法
	 * @param sa_level 管理员级别
	 * @return 返回值>0，说明存在；返回值<=0，说明不存在
	 */
	public int selectSupAdmLevel(int sa_level);
	/**
	 * 超级管理员登录方法
	 * @param sa_name 超级管理员账号
	 * @param sa_pwd 超级管理员密码
	 * @return 返回非空的超级管理员对象，登录成功；返回空的超级管理员对象，登录失败
	 */
	public int selectSupAdm(@Param("sa_name")String sa_name,@Param("sa_pwd")String sa_pwd);
	/**
	 * 根据管理员账号判断是否是超级管理员
	 * @param sa_name 管理员账号
	 * @return 是，返回值>0；否，返回值<=0
	 */
	public int isSupAdm(String sa_name);
	/**
	 * 根据超级管理员账号修改管理员密码
	 * @param sa_pwd 新密码
	 * @param sa_name 账号
	 * @return 修改成功，返回值>0；修改失败，返回值<=0
	 */
	public int updateSaPwd(@Param("sa_pwd")String sa_pwd, @Param("sa_name")String sa_name);
	/**
	 * 添加超级管理员
	 * @param adm_name 管理员账号
	 * @param adm_pwd 管理员密码
	 * @param adm_level 管理员级别
	 * @return 添加成功，返回值>0；添加失败，返回值<=0
	 */
	public int insertSa(@Param("sa_name")String sa_name,@Param("sa_pwd")String sa_pwd);
	/**
	 * 根据账号查询管理员编号
	 * @param sa_name 账号
	 * @return 管理员编号
	 */
	@Select("select sa_id from sup_adm where sa_name=#{sa_name}")
	public int selectSaId(String sa_name);
	/**
	 * 判断账号是否存在
	 * @param sa_name 账号
	 * @return 存在，返回值>0；不存在，返回值<=0
	 */
	public List<String> selectAllSaName();
}
